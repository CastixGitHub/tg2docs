Laurin's notes on the tutorial.
These need to be converted into edits to the wiki20.rst file


Wiki Tutorial...

mention how this happens...
"Wiki 20" -> Wiki-20

output of quickstart, looks more like...
-----------------
Selected and implied templates:
  tg.devtools#turbogears2  TurboGears 2.1 Standard Quickstart Template

...etc...

reading manifest file 'Wiki_20.egg-info/SOURCES.txt'
reading manifest template 'MANIFEST.in'
writing manifest file 'Wiki_20.egg-info/SOURCES.txt'
------------------


the "shell"...   provide a link to more info?
what do you do in the shell?   do we have a link?

should we mention this?    isn't it a standard step?
   python setup.py develop

#Model
maybe put the import for page *after* creating the file?

Consider using BaseDeclarative?   I'd say yes.

should the comment refer to sqlalchemy 0.5 docs?


setup_config -> setup_app
   get new source text...
hey!   I just realized that it uses "wiki_snippets" dir
   should we keep with the snippets?  or inline code?

explain better about why we're modifying setup_app?
   to add an initial data row

we're used to seeing DBSession.commit()????
This is the first time, we are seeing the database!
explain a little?

also... mention if you use the shell introduced above, you should use transaction.commit() too!

note:  stop the server to run setup-app
  restart paster serve --reload

controllers...
once again, the root.py code is quite different

no need to uncomment DBSession line...

again, fixup the source after edits

#Adding Views (Templates)

the header/footer includes are in master...   mention this!
add in sidebar!

mention what we are going to do.
  modified title tag
  replaced entire body tag

new page.html code.   

explain what py:replace does!   link?
mention that html comments lke <!-- ##{PageName} --> don't do anything.

give them the localhost link!

#Editing pages...   

remove the second "/div"   in replacement text
mention removing the edit link...


#Saving our edits

explain default better?   why are we doing this?

ah...   because we want /FrontPage to work!   a good reason...   explain.

woah!   we mention DBSession.flush(), and DBsession.commit()!   and then say
you don't have to do anything!   nutty.   Word this better?


#WikiWords
intro to wiki words...   explain motivation, we want an edit link to a page
when we encounter wiki words!
   I think a little pre-explaining is better, and then explain how the code
implements it...

restructured text format?   say what???
re-read the text and explain better?

should we add the "import tg" - or should we just use the existing imports


explain XML() call a little...

#Where's the page?
explain that now if you type a word like:   WikiWord, you get a link.
but what if you *follow* that link?

notfound   - mention the need to 'add', which is different than TG1.

give it a try...    explain more about how to add pages, or make sure it is
discussed fully above.

#pagelist
I just noticed we *skipped* using tg.url for a few links, is this mentioned
that this "shortcut" was taken?

add a link to the zip file to the end!

perhaps better links at end?   directly to ORM tutorial on SQLAlchemy, for
example?...    ideally, we'll have our own *simple* introduction to "parts"
like Genshi and SQLAlchemy, and then have these link to *specific* parts
of those sites - like Genshi XML directives, etc...
Is this overkill?

Also...    "What was covered"?
 
